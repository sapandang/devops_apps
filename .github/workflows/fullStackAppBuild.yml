name: Build and Package Full Stack Nuxt App

on:
  push:
    tags:
    - 'v*' # Runs on tags like v1.0.0, v2.1.3

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repo
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    # Install dependencies
    - name: Install dependencies
      working-directory: fullStackNuxtApp
      run: npm ci

    # Build Nuxt app
    - name: Build Nuxt App
      working-directory: fullStackNuxtApp
      run: npm run build

    # Prepare deployment package
    - name: Prepare deploy folder
      run: |
        mkdir deploy
        cp -r fullStackNuxtApp/.output deploy/.output
        cp fullStackNuxtApp/package.json deploy/
        cp fullStackNuxtApp/package-lock.json deploy/
        if [ -f fullStackNuxtApp/.env.production ]; then cp fullStackNuxtApp/.env.production deploy/; fi

    # Create tar archive
    - name: Create tarball with tag name
      run: |
        TAG_NAME=${GITHUB_REF##*/}
        tar -cvf fullstackapp_${TAG_NAME}.tar -C deploy .

    # Upload tarball to GitHub release
    - name: Upload release asset
      uses: softprops/action-gh-release@v2
      with:
        generate_release_notes: true
        files: fullstackapp_*.tar
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }} # âœ… use your fine-grained token
